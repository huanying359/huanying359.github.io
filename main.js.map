{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/pixelworks/lib/index.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/pixelworks/lib/processor.js","webpack:///./node_modules/pixelworks/lib/util.js","webpack:///./node_modules/@openlayers/pepjs/dist/pep.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/layer/BaseImage.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/reproj/Image.js","webpack:///./node_modules/ol/source/Image.js","webpack:///./node_modules/ol/source/Raster.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Processor","content","options","hmr","transform","insertInto","undefined","locals","push","useSourceMap","list","toString","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","data","width","height","output","b","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","buffer","createWorker","config","onMessage","lines","lib","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","Infinity","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","destroy","_destroyed","job","shift","input","segmentLength","Math","ceil","offset","slices","jj","slice","event","_resolveJob","set","hasImageData","context","getContext","imageData","createImageData","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","createEvent","initEvent","bubbles","cancelable","buttons","pressure","x","clientX","y","clientY","pointerId","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","detail","PointerMap","Map","SparseArrayMap","size","k","v","delete","has","clear","thisArg","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","newEvents","events","register","element","es","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","propagate","enterOver","eventHandler","_handledByPE","listen","addEvent","unlisten","removeEvent","eventName","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","toArray","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","elementChanged","oldValue","concatLists","accum","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","added","addedNodes","removed","removedNodes","attrib2css","selector","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","abs","dy","prepareEvent","pd","webkitForce","WEBKIT_FORCE_AT_MOUSE_DOWN","prepareButtonsForMove","which","mousedown","button","webkitmouseforcechanged","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","a","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","evts","oldSt","scrollTypes","UP","includes","DOWN","LEFT","RIGHT","touchAction","split","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","removePrimaryPointer","inPointer","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","altitudeAngle","tan","radToDeg","PI","atan","cos","azimuthAngle","sin","touchType","altKey","ctrlKey","metaKey","shiftKey","self","processTouches","inFunction","tl","changedTouches","shouldScroll","currentTarget","dya","dxa","left","right","findTouch","inTL","inId","vacuumTouches","touches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchforcechange","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","h","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","assertConnected","elem","ownerDocument","inActiveButtonState","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","textContent","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","Element","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","targetFinding","factory","util_abstract","uidCounter_","getUid","ol_uid","String","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","TypeError","ii","getValues","values","listener","opt_this","opt_once","originalListener_1","eventsKey","listenOnce","unlistenByKey","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","numberSafeCompareFunction","linearFindNearest","arr","direction","extend","extension","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","Event","BaseEvent","propagationStopped","stopPropagation","Target_extends","events_Target","Target","opt_target","target_","pendingRemovals_","dispatching_","listeners_","listeners","evt","pendingRemovals","getListeners","hasListener","opt_type","EventType","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","RESIZE","WHEEL","Observable_extends","ol_Observable","Observable","revision_","getRevision","on","len","once","un","Object_extends","ObjectEvent","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","f","getArray","removeAt","prev","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","coordinate","ua","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","IMAGE_DECODE","Image","decode","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","clearTimeout","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","load","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","min","max","cosh","exp","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","modulo","lerp","createExtent","extent","onlyCenter","smooth","center","resolution","opt_isMoving","viewWidth","viewHeight","minX","maxX","minY","maxY","ratio","log","none","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","BELOW","boundingExtent","coordinates","createEmpty","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","opt_extent","createOrUpdateEmpty","extent_equals","extendCoordinates","extendFlatCoordinates","flatCoordinates","end","stride","extendXY","getArea","area","extent_isEmpty","getWidth","getHeight","getBottomLeft","getBottomRight","getCenter","getCorner","corner","getTopLeft","getTopRight","getForViewAndSize","rotation","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","applyTransform","transformFn","xs","ys","_boundingExtentXYs","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","easeIn","pow","easeOut","inAndOut","linear","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","toEPSG4326","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","transforms","transforms_add","destination","sourceCode","destinationCode","projections_cache","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","projections2","forwardTransform","inverseTransform","proj_userProjection","toUserCoordinate","fromUserCoordinate","destProjection","fromUserExtent","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","clone","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","val","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","isNaN","intersectsLineString","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","tmp","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","floor","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","currentCenter","currentResolution","opt_rotation","metrics","getComputedStyle","parseInt","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","toUserExtent","calculateExtentInternal","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","baseLevel","fit","geometryOrExtent","geometry","userProjection","fitInternal","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerOnInternal","centerX","centerY","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","newNode","oldNode","replaceChild","removeNode","node","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","hasOverlay","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","PluggableMap_extends","cache","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","labelCache_","labelCacheListenerKey_","overlays_","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","createRenderer","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","top","getTargetElement","getView","pixelToCoordinateTransform","getOverlayById","getLoading","layerStatesArray","getSource","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","handleViewPropertyChanged_","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","declutterItems","layerIndex","usedTiles","renderFrame","setLayerGroup","setSize","setView","computedStyle","offsetWidth","parseFloat","offsetHeight","Control_extends","control_Control","Control","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontParameters","font","family","fontFamily","fontWeight","fontStyle","families","weight","Layer_extends","inView","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","lastIndex","firstIndex","getAngle","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","defaultCondition","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","normalize","color","color_toString","g","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","asColorLike","render_VectorContext","VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","labelCache","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","div","heights","rotateAtOffset","offsetX","offsetY","Immediate_extends","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","globalAlpha","setTransform","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","calculateMatrices2D","thisArg2","translatedCoordinate","offsets","projectionExtent","worldWidth","declutteredFeatures","numLayers","tmpCoord","getWrapX","callback_1","declutterTree","items","zIndexItems","renderDeclutter","renderDeclutterItems","scheduleExpireIconCache","Composite_extends","Composite","CompositeMapRenderer","labelCacheKey_","children_","previousElement","childElementCount","lastElementChild","children","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","ImageState","renderer_Layer_extends","renderer_Layer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","save","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","getImageData","err","Uint8Array","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","layerExtent","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clearRect","clips","clipZs","currentClip","zs","Number","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","restore","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","canvasTransform","gutter","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","Image_extends","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","ImageTile_extends","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","p1","p2","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","BaseImage_extends","BaseImage","BaseImageLayer","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imageExtent","imageResolution","imagePixelRatio","clipped","dw","dh","previousAlpha","layer_Image_extends","layer_Image","ImageLayer","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","error_","getError","handleLoad_","reproj_Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","Raster_extends","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","renderedRevision_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","putImageData","sharedContext","layerOrSource","raster","level","main_output","innerText"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/*!\n * PEP v0.5.3 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.PointerEventsPolyfill = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n  var MOUSE_PROPS = [\n    'bubbles',\n    'cancelable',\n    'view',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n    'pageX',\n    'pageY'\n  ];\n\n  var MOUSE_DEFAULTS = [\n    false,\n    false,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n    0,\n    0\n  ];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\n    // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n    e.buttons = inDict.buttons || 0;\n\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n\n    if (inDict.pressure !== undefined && e.buttons) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    }\n\n    // add x/y properties aliased to clientX/Y\n    e.x = e.clientX;\n    e.y = e.clientY;\n\n    // define the properties of the PointerEvent interface\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 1;\n    e.height = inDict.height || 1;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.twist = inDict.twist || 0;\n    e.tangentialPressure = inDict.tangentialPressure || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    e.detail = 0;\n    return e;\n  }\n\n  /**\n   * This module implements a map of pointer states\n   */\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n      if (!this.has(k)) {\n        this.size++;\n      }\n      this.array[k] = v;\n    },\n    has: function(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function(k) {\n      return this.array[k];\n    },\n    clear: function() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n\n    // return value, key, map\n    forEach: function(callback, thisArg) {\n      return this.array.forEach(function(v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n\n  var CLONE_PROPS = [\n\n    // MouseEvent\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n\n    // DOM Level 3\n    'buttons',\n\n    // PointerEvent\n    'pointerId',\n    'width',\n    'height',\n    'pressure',\n    'tiltX',\n    'tiltY',\n    'pointerType',\n    'hwTimestamp',\n    'isPrimary',\n\n    // event instance\n    'type',\n    'target',\n    'currentTarget',\n    'which',\n    'pageX',\n    'pageY',\n    'timeStamp'\n  ];\n\n  var CLONE_DEFAULTS = [\n\n    // MouseEvent\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n\n    // DOM Level 3\n    0,\n\n    // PointerEvent\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    '',\n    0,\n    false,\n\n    // event instance\n    '',\n    null,\n    null,\n    0,\n    0,\n    0,\n    0\n  ];\n\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n  var dispatcher = {\n    pointermap: new PointerMap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function(name, source) {\n      var s = source;\n      var newEvents = s.events;\n      if (newEvents) {\n        newEvents.forEach(function(e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains: /*scope.external.contains || */function(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n\n    // EVENTS\n    down: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function(event) {\n      this.out(event);\n      this.propagate(event, this.leave, false);\n    },\n    enterOver: function(event) {\n      this.over(event);\n      this.propagate(event, this.enter, true);\n    },\n\n    // LISTENER LOGIC\n    eventHandler: function(inEvent) {\n\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n      if (fn) {\n        fn(inEvent);\n      }\n      inEvent._handledByPE = true;\n    },\n\n    // set up event listeners\n    listen: function(target, events) {\n      events.forEach(function(e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n\n    // remove event listeners\n    unlisten: function(target, events) {\n      events.forEach(function(e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function(inType, inEvent) {\n\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n      var e = new PointerEvent(inType, inEvent);\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n\n    // make and dispatch an event in one call\n    fireEvent: function(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\n        // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      }\n\n      // keep the semantics of preventDefault\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function() {\n          inEvent.preventDefault();\n        };\n      }\n      return eventCopy;\n    },\n    getTarget: function(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n      if (!capture) {\n        return inEvent._target;\n      }\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    propagate: function(event, fn, propagateDown) {\n      var target = event.target;\n      var targets = [];\n\n      // Order of conditions due to document.contains() missing in IE.\n      while (target != null && target !== document && !target.contains(event.relatedTarget)) {\n        targets.push(target);\n        target = target.parentNode;\n\n        // Touch: Do not propagate if node is detached.\n        if (!target) {\n          return;\n        }\n      }\n      if (propagateDown) {\n        targets.reverse();\n      }\n      targets.forEach(function(target) {\n        event.target = target;\n        fn.call(this, event);\n      }, this);\n    },\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId, skipDispatch);\n      }\n\n      this.captureInfo[inPointerId] = inTarget;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('gotpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = inTarget;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    releaseCapture: function(inPointerId, skipDispatch) {\n      var t = this.captureInfo[inPointerId];\n      if (!t) {\n        return;\n      }\n\n      this.captureInfo[inPointerId] = undefined;\n      document.removeEventListener('pointerup', this.implicitRelease);\n      document.removeEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('lostpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = t;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n      var t = this.getTarget(inEvent);\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\n  var targeting = {\n    shadow: function(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function(inEl) {\n      var s = this.shadow(inEl);\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function(shadow) {\n      var os = shadow.olderShadowRoot;\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n      return os;\n    },\n    allShadows: function(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n      return shadows;\n    },\n    searchRoot: function(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr;\n\n        // is element a shadow host?\n        sr = this.targetingShadow(t);\n        while (sr) {\n\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n          if (!st) {\n\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        }\n\n        // light dom element is the target\n        return t;\n      }\n    },\n    owner: function(element) {\n      var s = element;\n\n      // walk up until you hit the shadow root or document\n      while (s.parentNode) {\n        s = s.parentNode;\n      }\n\n      // the owner element is expected to be a Document or ShadowRoot\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n      return s;\n    },\n    findTarget: function(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      // if the listener is in the shadow root, it is much faster to start there\n      var s = this.owner(inEvent.target);\n\n      // if x, y is not in this root, fall back to document search\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n      return this.searchRoot(s, x, y);\n    }\n  };\n\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function(target) {\n\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function(target) {\n      this.watchSubtree(target);\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n      return [];\n    },\n    removeElement: function(el) {\n      this.removeCallback(el);\n    },\n    addElement: function(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function(accum, list) {\n      return accum.concat(toArray(list));\n    },\n\n    // register all touch-action = none nodes on document load\n    installOnLoad: function() {\n      document.addEventListener('readystatechange', function() {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function(inNodes) {\n\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this);\n\n      // make sure the added nodes are accounted for\n      tree.push(filter(inNodes, this.isElement));\n\n      // flatten the list\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  function shadowSelector(s) {\n    return 'body /shadow-deep/ ' + s;\n  }\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\n  }\n  var attrib2css = [\n    { selector: '[touch-action=\"none\"]', value: 'none' },\n    { selector: '[touch-action=\"auto\"]', value: 'auto' },\n    { selector: '[touch-action~=\"pan-x\"]', value: 'pan-x' },\n    { selector: '[touch-action~=\"pan-y\"]', value: 'pan-y' },\n    { selector: '[touch-action~=\"pan-up\"]', value: 'pan-up' },\n    { selector: '[touch-action~=\"pan-down\"]', value: 'pan-down' },\n    { selector: '[touch-action~=\"pan-left\"]', value: 'pan-left' },\n    { selector: '[touch-action~=\"pan-right\"]', value: 'pan-right' }\n  ];\n  var styles = '';\n\n  // only install stylesheet if the browser has touch action support\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\n  // only add shadow selectors if shadowdom is supported\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function(r) {\n        styles += r.selector + rule(r.value) + '\\n';\n        if (hasShadowRoot) {\n          styles += shadowSelector(r.selector) + rule(r.value) + '\\n';\n        }\n      });\n\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var pointermap = dispatcher.pointermap;\n\n  // radius around touchend that swallows mouse events\n  var DEDUP_DIST = 25;\n\n  // left, middle, right, back, forward\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\n  var HAS_BUTTONS = false;\n  try {\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {}\n\n  // handler block for native mouse events\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: [\n      'mousedown',\n      'webkitmouseforcechanged',\n      'mousemove',\n      'mouseup',\n      'mouseover',\n      'mouseout'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function(inEvent) {\n      var e = dispatcher.cloneEvent(inEvent);\n\n      // forward mouse preventDefault\n      var pd = e.preventDefault;\n      e.preventDefault = function() {\n        inEvent.preventDefault();\n        pd();\n      };\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n      if ('webkitForce' in inEvent) {\n        e.pressure = inEvent.webkitForce - MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN;\n      }\n      return e;\n    },\n    prepareButtonsForMove: function(e, inEvent) {\n      var p = pointermap.get(this.POINTER_ID);\n\n      // Update buttons state after possible out-of-document mouseup.\n      if (inEvent.which === 0 || !p) {\n        e.buttons = 0;\n      } else {\n        e.buttons = p.buttons;\n      }\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n          if (p) { e.buttons |= p.buttons; }\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n        if (!p || p.buttons === 0) {\n          dispatcher.down(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n\n    // This is called when the user force presses without moving x/y\n    webkitmouseforcechanged: function(inEvent) {\n      this.mousemove(inEvent);\n    },\n    mousemove: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.move(e);\n      }\n    },\n    mouseup: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button];\n\n          // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n\n        // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\n        if (e.buttons === 0) {\n          dispatcher.up(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.deactivateMouse();\n    },\n    deactivateMouse: function() {\n      pointermap.delete(this.POINTER_ID);\n    }\n  };\n\n  var captureInfo = dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var pointermap$1 = dispatcher.pointermap;\n\n  // this should be long enough to ignore compat mouse events made by touch\n  var DEDUP_TIMEOUT = 2500;\n  var ATTRIB = 'touch-action';\n  var INSTALLER;\n\n  // bitmask for _scrollType\n  var UP = 1;\n  var DOWN = 2;\n  var LEFT = 4;\n  var RIGHT = 8;\n  var AUTO = UP | DOWN | LEFT | RIGHT;\n\n  // handler block for native touch events\n  var touchEvents = {\n    events: [\n      'touchstart',\n      'touchmove',\n      'touchforcechange',\n      'touchend',\n      'touchcancel'\n    ],\n    register: function(target) {\n      INSTALLER.enableOnSubtree(target);\n    },\n    unregister: function() {\n\n      // TODO(dfreedman): is it worth it to disconnect the MO?\n    },\n    elementAdded: function(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      if (typeof st === \"number\") {\n        el._scrollType = st;\n        dispatcher.listen(el, this.events);\n\n        // set touch-action on shadows as well\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n          dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function(el) {\n\n      // In some cases, an element is removed before a touchend.\n      // When this is the case, we should wait for the touchend before unlistening,\n      // because we still want pointer events to bubble up after removing from DOM.\n      if (pointermap$1.size > 0) {\n        var evts = this.events;\n        el.addEventListener('touchend', function() {\n          el._scrollType = undefined;\n          dispatcher.unlisten(el, evts);\n        });\n      } else {\n        el._scrollType = undefined;\n        dispatcher.unlisten(el, this.events);\n      }\n\n      // remove touch-action from shadow\n      allShadows(el).forEach(function(s) {\n        s._scrollType = undefined;\n        dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue);\n\n      // simply update scrollType if listeners are already established\n      if (typeof st === \"number\" && typeof oldSt === \"number\") {\n        el._scrollType = st;\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n        }, this);\n      } else if (typeof oldSt === \"number\") {\n        this.elementRemoved(el);\n      } else if (typeof st === \"number\") {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      UP: function(s) {\n        return s.includes('pan-y') || s.includes('pan-up') ? UP : 0;\n      },\n      DOWN: function(s) {\n        return s.includes('pan-y') || s.includes('pan-down') ? DOWN : 0;\n      },\n      LEFT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-left') ? LEFT : 0;\n      },\n      RIGHT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-right') ? RIGHT : 0;\n      }\n    },\n    touchActionToScrollType: function(touchAction) {\n      if (!touchAction) {\n        return;\n      }\n\n      if (touchAction === \"auto\") {\n        return AUTO;\n      }\n\n      if (touchAction === \"none\") {\n        return 0;\n      }\n\n      var s = touchAction.split(' ');\n      var st = this.scrollTypes;\n\n      // construct a bitmask of allowed scroll directions\n      return st.UP(s) | st.DOWN(s) | st.LEFT(s) | st.RIGHT(s);\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function(inTouch) {\n\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n        this.scrolling = false;\n      }\n    },\n    removePrimaryPointer: function(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n      }\n    },\n    typeToButtons: function(type) {\n      var ret = 0;\n      if (type === 'touchstart' || type === 'touchmove' || type === 'touchforcechange') {\n        ret = 1;\n      }\n      return ret;\n    },\n    touchToPointer: function(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = dispatcher.cloneEvent(inTouch);\n\n      // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\n      e.pressure = inTouch.force !== undefined ?\n        inTouch.force :\n        inTouch.webkitForce !== undefined ?\n          inTouch.webkitForce : undefined;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n      if (inTouch.altitudeAngle) {\n        var tan = Math.tan(inTouch.altitudeAngle);\n        var radToDeg = 180 / Math.PI;\n        e.tiltX = Math.atan(Math.cos(inTouch.azimuthAngle) / tan) * radToDeg;\n        e.tiltY = Math.atan(Math.sin(inTouch.azimuthAngle) / tan) * radToDeg;\n      } else {\n        e.tiltX = 0;\n        e.tiltY = 0;\n      }\n      if (inTouch.touchType === 'stylus') {\n        e.pointerType = 'pen';\n      } else {\n        e.pointerType = this.POINTER_TYPE;\n      }\n\n      // forward modifier keys\n      e.altKey = cte.altKey;\n      e.ctrlKey = cte.ctrlKey;\n      e.metaKey = cte.metaKey;\n      e.shiftKey = cte.shiftKey;\n\n      // forward touch preventDefaults\n      var self = this;\n      e.preventDefault = function() {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n      return e;\n    },\n    processTouches: function(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var st = inEvent.currentTarget._scrollType;\n        if (st === 0) {\n\n          // this element is a `touch-action: none`, should never scroll\n          ret = false;\n        } else if (st === AUTO) {\n\n          // this element is a `touch-action: auto`, should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n\n          var dy = t.clientY - this.firstXY.Y;\n          var dya = Math.abs(dy);\n          var dx = t.clientX - this.firstXY.X;\n          var dxa = Math.abs(dx);\n\n          var up = st & UP;\n          var down = st & DOWN;\n          var left = st & LEFT;\n          var right = st & RIGHT;\n\n          if (left && right) {\n\n            // should scroll on the x axis\n            ret = dxa > dya;\n          } else if (left) {\n\n            // should scroll left\n            ret = dxa > dya && dx > 0;\n          } else if (right) {\n\n            // should scroll right\n            ret = dxa > dya && dx < 0;\n          }\n\n          if (!ret) {\n            if (up && down) {\n\n              // should scroll on the y axis\n              ret = dxa < dya;\n            } else if (up) {\n\n              // should scroll up\n              ret = dxa < dya && dy > 0;\n            } else if (down) {\n\n              // should scroll down\n              ret = dxa < dya && dy < 0;\n            }\n          }\n\n        }\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function(inEvent) {\n      var tl = inEvent.touches;\n\n      // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n      if (pointermap$1.size >= tl.length) {\n        var d = [];\n        pointermap$1.forEach(function(value, key) {\n\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n      if (!this.scrolling) {\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function(inPointer) {\n      pointermap$1.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      dispatcher.enterOver(inPointer);\n      dispatcher.down(inPointer);\n    },\n\n    // Called when pressure or tilt changes without the x/y changing\n    touchforcechange: function(inEvent) {\n      this.touchmove(inEvent);\n    },\n    touchmove: function(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          if (inEvent.type !== 'touchforcechange') {\n            inEvent.preventDefault();\n          }\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function(inPointer) {\n      var event = inPointer;\n      var pointer = pointermap$1.get(event.pointerId);\n\n      // a finger drifted off the screen, ignore it\n      if (!pointer) {\n        return;\n      }\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      dispatcher.move(event);\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget;\n\n        // recover from retargeting by shadow\n        outEvent.target = outTarget;\n        if (event.target) {\n          dispatcher.leaveOut(outEvent);\n          dispatcher.enterOver(event);\n        } else {\n\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function(inPointer) {\n      if (!this.scrolling) {\n        dispatcher.up(inPointer);\n        dispatcher.leaveOut(inPointer);\n      }\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function(inPointer) {\n      dispatcher.cancel(inPointer);\n      dispatcher.leaveOut(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function(inPointer) {\n      pointermap$1.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function(inEvent) {\n      var lts = mouseEvents.lastTouches;\n      var t = inEvent.changedTouches[0];\n\n      // only the primary finger will synth mouse events\n      if (this.isPrimaryTouch(t)) {\n\n        // remember x/y of last touch\n        var lt = { x: t.clientX, y: t.clientY };\n        lts.push(lt);\n        var fn = (function(lts, lt) {\n          var i = lts.indexOf(lt);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }).bind(null, lts, lt);\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n    touchEvents.elementChanged, touchEvents);\n\n  var pointermap$2 = dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: [\n      'MSPointerDown',\n      'MSPointerMove',\n      'MSPointerUp',\n      'MSPointerOut',\n      'MSPointerOver',\n      'MSPointerCancel',\n      'MSGotPointerCapture',\n      'MSLostPointerCapture'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: [\n      '',\n      'unavailable',\n      'touch',\n      'pen',\n      'mouse'\n    ],\n    prepareEvent: function(inEvent) {\n      var e = inEvent;\n      if (HAS_BITMAP_TYPE) {\n        e = dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n      return e;\n    },\n    cleanup: function(id) {\n      pointermap$2.delete(id);\n    },\n    MSPointerDown: function(inEvent) {\n      pointermap$2.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      dispatcher.down(e);\n    },\n    MSPointerMove: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.move(e);\n    },\n    MSPointerUp: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    }\n  };\n\n  function applyPolyfill() {\n\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        dispatcher.registerSource('ms', msEvents);\n      } else {\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: 0,\n          enumerable: true\n        });\n        dispatcher.registerSource('mouse', mouseEvents);\n        if (window.ontouchstart !== undefined) {\n          dispatcher.registerSource('touch', touchEvents);\n        }\n      }\n\n      dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s;\n  var r;\n  var h;\n  function assertActive(id) {\n    if (!dispatcher.pointermap.has(id)) {\n      var error = new Error('NotFoundError');\n      error.name = 'NotFoundError';\n      throw error;\n    }\n  }\n  function assertConnected(elem) {\n    var parent = elem.parentNode;\n    while (parent && parent !== elem.ownerDocument) {\n      parent = parent.parentNode;\n    }\n    if (!parent) {\n      var error = new Error('InvalidStateError');\n      error.name = 'InvalidStateError';\n      throw error;\n    }\n  }\n  function inActiveButtonState(id) {\n    var p = dispatcher.pointermap.get(id);\n    return p.buttons !== 0;\n  }\n  if (n.msPointerEnabled) {\n    s = function(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this, true);\n        this.msSetPointerCapture(pointerId);\n      }\n    };\n    r = function(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId, true);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this);\n      }\n    };\n    r = function releasePointerCapture(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId);\n    };\n  }\n  h = function hasPointerCapture(pointerId) {\n    return !!dispatcher.captureInfo[pointerId];\n  };\n\n  function applyPolyfill$1() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        },\n        'hasPointerCapture': {\n          value: h\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  applyPolyfill();\n  applyPolyfill$1();\n\n  var pointerevents = {\n    dispatcher: dispatcher,\n    Installer: Installer,\n    PointerEvent: PointerEvent,\n    PointerMap: PointerMap,\n    targetFinding: targeting\n  };\n\n  return pointerevents;\n\n}));","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type ReturnType */\n    var lastResult;\n    /** @type Array<any> */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.target_ = opt_target;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.target_ || this;\n        }\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~Event#error\n     * @api\n     */\n    ERROR: 'error',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {PointerEvent} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {PointerEvent}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport '@openlayers/pepjs';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        element.setAttribute('touch-action', 'none');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                tile.load();\n                if (tile.getState() === TileState.LOADING) {\n                    this.tilesLoadingKeys_[tileKey] = true;\n                    ++this.tilesLoading_;\n                    ++newLoads;\n                }\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform, getTransformFromProjections } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\nimport { memoizeOne } from '../functions.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj/Projection.js\").default} [sourceProjection] The source projection.\n         * @param {import(\"../proj/Projection.js\").default} [destProjection] The destination projection.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, sourceProjection, destProjection) {\n            if (!sourceProjection || !destProjection) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var transform = getTransformFromProjections(sourceProjection, destProjection);\n            var clone = this.clone();\n            clone.applyTransform(transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj/Projection.js\").default} sourceProjection The source projection.\n     * @param {import(\"../proj/Projection.js\").default} destProjection The destination projection.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, sourceProjection, destProjection) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, sourceProjection, destProjection);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate.js';\nimport { easeOut } from './easing.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getSizeFromViewport_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry.clone().transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed,\n            hasOverlay: false\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\nimport { toUserCoordinate, fromUserCoordinate } from './proj.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        var handleMapBrowserEvent = _this.handleMapBrowserEvent.bind(_this);\n        for (var key in MapBrowserEventType) {\n            _this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        var handleBrowserEvent = _this.handleBrowserEvent.bind(_this);\n        _this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n        _this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent, false);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {import(\"./events/Target.js\").default}\n         */\n        _this.labelCache_ = null;\n        /**\n         * @type {import(\"./events.js\").EventsKey}\n         */\n        _this.labelCacheListenerKey_;\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n        this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels between\n        // the center of the tile and the center of the viewport.  The factor of 65536\n        // means that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var center = frameState.viewState.center;\n        var deltaX = tileCenter[0] - center[0];\n        var deltaY = tileCenter[1] - center[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {Array<string>} families\n * @property {string} style\n * @property {string} weight\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {FontParameters} The font families (or null if the input spec is invalid).\n */\nexport var getFontParameters = (function () {\n    var style;\n    /**\n     * @type {Object<string, FontParameters>}\n     */\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            var fontWeight = style.fontWeight;\n            var fontStyle = style.fontStyle;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            var families = family.split(/,\\s?/);\n            cache[font] = {\n                families: families,\n                weight: fontWeight,\n                style: fontStyle\n            };\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {boolean} hasOverlay Set by the renderer when an overlay for points and text is used.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport { inView } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtentInternal(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n            map.getPixelFromCoordinateInternal(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        this.consumers = {};\n        _super.prototype.clear.call(this);\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 100;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var context = getMeasureContext();\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            context.font = fontStyle + ' ' + fontWeight + ' ' + size + referenceFont;\n            referenceWidth = context.measureText(text).width;\n            if (fontFamily != referenceFont) {\n                context.font = fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont;\n                var width = context.measureText(text).width;\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    if (labelCache.getCount()) {\n                        labelCache.clear();\n                    }\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (!(key in checked)) {\n                checked[key] = retries;\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checked[key] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureFont) {\n        measureContext.font = measureFont = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (opacity != 1) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { inView } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        var offsets = [[0, 0]];\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n            if (checkWrapped) {\n                offsets.push([-worldWidth, 0], [worldWidth, 0]);\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n                    if (layerRenderer && source) {\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { inView } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { labelCache } from '../render/canvas.js';\nimport EventType from '../events/EventType.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.labelCacheKey_ = listen(labelCache, EventType.CLEAR, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.labelCacheKey_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var hasOverlay = false;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            hasOverlay = hasOverlay || layerState.hasOverlay;\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            var childElementCount = element.childElementCount;\n            if ((element !== previousElement || i == ii - 1) && childElementCount === 2 && !hasOverlay) {\n                element.removeChild(element.lastElementChild);\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                hasOverlay = childElementCount === 2;\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform, toString as transformToString } from '../../transform.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {import(\"../../transform\").Transform} transform Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transformToString(transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport { fromUserExtent } from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var canvasTransform = transformToString(this.pixelTransform);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { IMAGE_DECODE } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = typeof screen !== 'undefined';\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var projection = viewState.projection;\n            if (!ENABLE_RASTER_REPROJECTION) {\n                var sourceProjection = imageSource.getProjection();\n                if (sourceProjection) {\n                    projection = sourceProjection;\n                }\n            }\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n            if (image && this.loadImage(image)) {\n                this.image_ = image;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped = !containsExtent(layerExtent, frameState.extent) && intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        var canvasTransform = transformToString(this.pixelTransform);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index.js';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        var changed = _this.changed.bind(_this);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            _this.layers_[i].addEventListener(EventType.CHANGE, changed);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            index: 0,\n            layerIndex: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {},\n            declutterItems: []\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Infinity;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            frameState.layerIndex = i;\n            var imageData = getImageData(this.layers_[i], frameState);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var container = renderer.renderFrame(frameState, null);\n    var element;\n    if (container) {\n        element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZSource from 'ol/source/XYZ';\nimport {fromLonLat} from 'ol/proj';\nimport ImageLayer from 'ol/layer/Image';\nimport RasterSource from 'ol/source/Raster';\n\nconst key = 'pk.eyJ1IjoiaHVhbnlpbmczNTkiLCJhIjoiY2twOTQ2cGVpMGUzbTJ4b2ZidjAyZ3liaSJ9.CtSu660fVU6z6lZPXSAzvQ';\nconst elevation = new XYZSource({\n  url: 'https://api.mapbox.com/v4/mapbox.terrain-rgb/{z}/{x}/{y}.pngraw?access_token=' + key,\n  crossOrigin: 'anonymous'\n});\n\nfunction flood(pixels, data) {\n  const pixel = pixels[0];\n  if (pixel[3]) {\n    // decode R, G, B values as elevation\n    const height = -10000 + ((pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1);\n    if (height <= data.level) {\n      // sea blue\n      pixel[0] = 145; // red\n      pixel[1] = 175; // green\n      pixel[2] = 186; // blue\n      pixel[3] = 255; // alpha\n    } else {\n      // transparent\n      pixel[3] = 0;\n    }\n  }\n  return pixel;\n}\nconst raster = new RasterSource({\n  sources: [elevation],\n  operation: flood\n});\nconst control = document.getElementById('level');\nconst output = document.getElementById('output');\ncontrol.addEventListener('input', function() {\n  output.innerText = control.value;\n  raster.changed();\n});\noutput.innerText = control.value;\nraster.on('beforeoperations', function(event) {\n  event.data.level = control.value;\n});\n\nnew Map({\n  target: 'map-container',\n  layers: [\n    new TileLayer({\n      source: new XYZSource({\n        url: 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg'\n      })\n    }),new ImageLayer({\n  opacity: 0.8,\n  source: raster\n})\n\n  ],\n  view: new View({\n    center: fromLonLat([117.1493, 32.6965]),\n    zoom: 12\n  })\n});\n"],"sourceRoot":""}